// Задание 1

// Написать функцию, которая принимает два параметра и складывает их.

// Предусмотреть проверку на тип данных. Если хоть один из параметров
// не является числом, должно выводиться ообщение об ошибке. Также обраьботайте
// случай, если не было введено два параметра.

// Примеры результатов вызова функции:

// sum(2,4); // 6

// sum('d',4); // введенные данные не являются числами

// sum(1, [2]); // введенные данные не являются числами

// sum(1); // введите два параметра

// sum(); // введите два параметра

function sum(num1, num2) {
  let result = 0;
  if (arguments.length <= 1) {
    result = 'Введите два параметра';
  } else if (typeof num1 === 'number' && typeof num2 === 'number') {
    result = num1 + num2;
  } else {
    result = 'Введенные данные не являются числами';
  }
  return result;
}

console.log(sum());

//----------------------------------------------------------------------------------

// Задание 2

// Измените функцию "square" так, чтобы в случае ее вызова без аргумента генерировалась
// консольная ошибка "Функция "square" не может быть вызвана без аргумента"

// function square(a) {
//     console.log(a * a)
//   }

function square(a) {
  if (arguments.length <= 0) {
    console.error('Функция "square" не может быть вызвана без аргумента');
  } else {
    console.log(a * a);
  }
}

console.log(square());

// square(10) // 100

// square()
// ДО: NaN
// ПОСЛЕ: Uncaught Error: Функция "square" не может быть вызвана без аргумента

//----------------------------------------------------------------------------------

// Задание 3

// Создать функцию "угадай число". Она принимает число от 1 до 10 (обязательно проверить,
// что число не больше 10 и не меньше 0). Генерирует рандомное число от 1 до 10
// и сравнивает с заданным числом.
// Если они совпали, то возвращает “Вы выиграли”, если нет
// - то “Вы не угадали, ваше число -  ...,  а выпало число ...”
// Функция создания случайного числа уже была ранее в материалах,
// в задаче по созданию случайного цвета.
// Написать функцию в стрелочном синтаксисе.

const getRandomInteger = (min, max) => Math.floor(Math.random() * (max - min)) + min;

const predictNumber = (number) => {
  let randomNumber = getRandomInteger(1, 10);
  return number >= 0 && number <= 10 && number === randomNumber
    ? 'Вы выиграли'
    : `Вы не угадали, ваше число - ${number}, а выпало число ${randomNumber}`;
};

console.log(predictNumber(1));

//----------------------------------------------------------------------------------

// Задание 4

// Определить массив, например

let arr = [5, 4, 3, 8, 0];

// Создать функцию filterFor(arr, a). Функция должна вернуть новый массив из
// элементов arr, но в нем должны содержаться элементы, которые
// больше или равны (>=) значения переменной a.
// Например, запуск функции filterFor(arr, 5) дает результат [5,8]
// запуск функции filterFor(arr, 10) дает результат []
// запуск функции filterFor(arr, 3.11) дает результат [4,5,8]

const filterFor = (arr, a) => {
  let newArr = [];
  for (let items of arr) {
    if (items >= a) {
      newArr.push(items);
    }
  }
  return newArr;
};

console.log(filterFor(arr, 3.11));

//----------------------------------------------------------------------------------

// Задание 5

// Напишите функцию copyArr(arr), которая копирует массив, не изменяя оригинал.
// Используйте подходящий метод массива.

const copyArr = (arr) => {
  let newArr = arr.map((item) => item);
  return newArr;
};

//----------------------------------------------------------------------------------

// Задание 6

// Создайте функцию sumObjectValues, которая будет суммировать все значения свойств,
// которые являются числами. Сумму чисел необходимо вернуть из функции.

// Проверить работу функции можно на объекте:

const objectWithNumbers = {
  a: 10,
  b: 20,
  c: 'string',
  d: 12,
};

const sumObjectValues = (object) => {
  let result = 0;
  for (let item in object) {
    if (typeof object[item] === 'number') {
      result += object[item];
    }
  }
  return result;
};

console.log(sumObjectValues(objectWithNumbers));
